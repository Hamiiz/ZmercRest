name: CD - Build and deploy

on:
  push:
    branches:
      - main
    paths:
      - "**"
      - "!**.md"
  pull_request:
    branches:
      - main

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    env:
      DATABASE_URL: ${{ vars.LOCAL_DB }}
      DIRECT_URL: ${{ secrets.DIRECT_URL }}
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: postgres
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Setup Node.js
        uses: actions/setup-node@v5
        with:
          node-version: 24

      - name: Install dependencies
        run: npm install

      - name: Build
        run: |
          npx prisma db push
          npx tsx
          echo "Build done"

  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_ACCESS }}

      - name: Checkout
        uses: actions/checkout@v5

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          dockerfile: Dockerfile
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/zmercrest:latest
          secrets: |
            database_url=${{ secrets.SUPABASE_DB }}
            direct_url=${{ secrets.DIRECT_URL }}
        
